Multiplizierer:
Adresse		Maschinencode			Pseudo-Assembler	Pseudocode
0x00		0001 0011 0000 0001		R3 = RIN 0x01		1 = 1
														do {
0x01		0001 0100 0000 0000		R4 = RIN 0x00			i = 0
0x02		0001 0101 0000 0000		R5 = RIN 0x00			E = 0
0x03		0100 0110 0000 0001		R6 = IN R0 P1			A = read()
0x04		0100 0111 0000 0001		R7 = IN R0 P1			B = read()
															do {
0x05		0001 0001 0001 0000		R1 = RIN 0x10				T = A >> i
0x06		1011 0001 0001 0100		R1 = R1 OR R4				
0x07		0011 0010 0110 0001		SHIFT R2=R6<<R1				
0x08		1010 0010 0010 0011		R2 = R2 AND R3				T &= 1
0x09		0010 0000 0010 0011		COMP R2 R3
0x0A		0111 0011 0000 1110		JMP2 != 0x0E				if (T == 1) {
0x0B		0001 0001 0001 1000		R1 = RIN 0x18					T = B << i
0x0C		1011 0001 0001 0100		R1 = R1 OR R4					
0x0D		0011 0010 0111 0001		SHIFT R2=R7<<R1					
0x0E		1000 0101 0101 0010		R5 = R5 ADD R2 					E += T
																}
0x0F		1000 0100 0100 0011		R4 = R4 ADD R3 				i++
0x10		0001 0001 0000 0111		R1 = RIN 0x07			} while (i <= 7)
0x11		0010 0000 0100 0001		COMP R4 R1
0x12		0111 0111 0000 0100		JMP2 <= 0x04			
0x13		0101 0001 0101 0000		OUT P1 R5				print(E)
0x14		0111 0001 0000 0000		JMP2 true 0x0000	} while (true)

